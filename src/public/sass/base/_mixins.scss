@use 'sass:color';
@use 'base/variables' as v;

@mixin device($size) {
  @media (min-width: $size) {
    @content;
  }
}
@mixin phone {
  @media (min-width: v.$phone) {
    @content;
  }
}
@mixin phoneXL {
  @media (min-width: v.$phoneXL) {
    @content;
  }
}
@mixin tablet {
  @media (min-width: v.$tablet) {
    @content;
  }
}
@mixin desktop {
  @media (min-width: v.$desktop) {
    @content;
  }
}

@mixin desktopXL {
  @media (min-width: v.$desktopXL) {
    @content;
  }
}

@mixin desktopXXL {
  @media (min-width: v.$desktopXXL) {
    @content;
  }
}
@mixin grid($columns, $gap) {
  display: grid;
  gap: $gap;
  grid-template-columns: repeat($columns, 1fr);
}
@mixin flex-columns(
  $columns,
  $column-gap,
  $row-gap,
  $items-max-height: none,
  $justify: center,
  $align-content: flex-start
) {
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
  justify-content: $justify;
  column-gap: $column-gap;
  row-gap: $row-gap;
  > * {
    max-height: $items-max-height;
    flex-basis: calc((100% - $column-gap * ($columns - 1)) / $columns);
  }
}
@mixin fluid-text($min, $max) {
  font-size: clamp($min, -0.8rem + 10vw, $max);
}
@mixin heading {
  display: flex;
  flex-direction: column;
  align-items: center;
  color: color.adjust($color: v.$bright-blue, $lightness: -20%);
  font-weight: 900;

  &::after {
    display: inline-block;
    width: calc(50%);
    height: 0.2rem;
    margin: 0.6rem 0 0 0;
    background-color: v.$aqua-blue;
    content: '';
  }
}
@mixin bgImg($url) {
  background-image: url($url);
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin btn($textColor, $bgColor, $textHover, $bgHover) {
  padding: 1.5rem 2rem;
  border: none;
  border-radius: 1rem;
  background-color: $bgColor;
  color: $textColor;
  font-size: 1.8rem;
  font-weight: 700;
  text-align: center;
  transition: background-color 300ms;

  &:hover {
    background-color: $bgHover;
    color: $textHover;
    cursor: pointer;
  }
}
