@use 'base/variables' as v;

@mixin device($size) {
    @media (min-width: $size){
        @content;
    }
}   
@mixin phone {
    @media (min-width: v.$phone){
        @content;
    }
}   
@mixin phoneXL {
    @media (min-width: v.$phoneXL){
        @content;
    }
}   
@mixin tablet {
    @media (min-width: v.$tablet){
        @content;
    }
}
@mixin desktop {
    @media (min-width: v.$desktop){
        @content;
    }
}

@mixin desktopXL {
    @media (min-width: v.$desktopXL){
        @content;
    }
}
@mixin grid($columns, $gap){
    display: grid;
    grid-template-columns: repeat($columns, 1fr);
    gap: $gap;
}
@mixin flex-columns(
    $columns,
    $column-gap,
    $row-gap,
    $items-max-height: none,
    $justify: center,
    $align-content: flex-start
) {
    display: flex;
    flex-wrap: wrap;
    justify-content: $justify;
    align-content: flex-start;
    row-gap: $row-gap;
    column-gap: $column-gap;
    > * {
    flex-basis: calc((100% - $column-gap * ($columns - 1)) / $columns);
    max-height: $items-max-height;
  }
}
@mixin fluid-text($min, $max) {
    font-size: clamp($min,-0.8rem + 10vw,$max);
}
@mixin heading {
    color: darken(v.$bright-blue, 15%);
    display: flex;
    flex-direction: column;
    align-items: center;
    font-weight: 900;
    
    &::after {
        content: '';
        background-color: v.$aqua-blue;
        height: .2rem;
        width: calc(50%);
        display: inline-block;
        margin: .2rem 0 0 0;
    }
}
@mixin bgImg($url){
    background-image: url($url);
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin btn($textColor, $bgColor, $textHover, $bgHover) {
    background-color: $bgColor;
    color: $textColor;
    text-align: center;
    border: none;
    border-radius: 2.4rem;
    padding: 1.5rem 2rem;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    transition: background-color 300ms;
    
    &:hover {
        cursor: pointer;
        color: $textHover;
        background-color: $bgHover;
    }
}